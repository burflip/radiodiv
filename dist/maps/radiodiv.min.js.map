{"version":3,"sources":["core.js"],"names":["initRadiodiv","settings","$","each","k","field","radioDivInline","radioDiv","name","selectors","type","selected","values","createHiddenIfNotExist","v","addSelected","addRadioDivListeners","data","value","undefined","radiodiv","hidden_checked","length","append","on","event","radioClick","checkBoxClick","defaults","click_callback","addClass","config","background_color_hovered","removeClass","console","log","background_color_selected","currentTarget","find","val","current_array","split","hasClass","attr","toString","options","extend","this","jQuery","fields","animation"],"mappings":"AAiDA,QAAAA,cAAAC,GAUAC,EAAAC,KAAAD,EAAA,aAAA,SAAAE,EAAAC,GACAC,eAAAJ,EAAAG,MAIA,QAAAE,UAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAC,uBAAAL,GACAN,EAAAC,KAAAM,EAAA,SAAAL,EAAAU,GACA,GAAAT,GAAAH,EAAA,IAAAY,EACAC,aAAAV,EAAAM,EAAAC,EAAAE,IACAE,qBAAAX,EAAAK,EAAAF,EAAAI,EAAAE,MAIA,QAAAR,gBAAAD,GACA,GAAAG,GAAAH,EAAAY,KAAA,WACAN,EAAA,GAAAN,EAAAY,KAAA,gBAAA,GAAA,EACAC,EAAAb,EAAAY,KAAA,WAEAF,aAAAV,EAAAa,EAAAP,GACAK,qBAAAX,EAAA,QAAAG,EAAAU,GAGA,QAAAL,wBAAAL,GACAW,SAAAjB,EAAAkB,SAAAC,eAAAb,IACA,GAAAN,EAAA,IAAAM,GAAAc,SACA,GAAApB,EAAA,QAAAoB,OACApB,EAAA,QAAAqB,OAAA,8BAAAf,EAAA,SAAAA,EAAA,eAEAN,EAAA,QAAAqB,OAAA,8BAAAf,EAAA,SAAAA,EAAA,eAEAN,EAAAkB,SAAAC,eAAAb,GAAAN,EAAA,IAAAM,IAKA,QAAAQ,sBAAAX,EAAAK,EAAAF,EAAAU,GACAb,EAAAmB,GAAA,QAAA,SAAAC,GACA,SAAAf,EACAgB,WAAAD,EAAAjB,GAEAmB,cAAAtB,EAAAG,EAAAU,GAEA,kBAAAhB,GAAAkB,SAAAQ,SAAAC,eAAA3B,EAAAkB,SAAAQ,SAAAC,eAAAxB,EAAAK,EAAAF,EAAAU,GAAA,OAGAb,EAAAmB,GAAA,aAAA,WACAnB,EAAAyB,SAAA5B,EAAAkB,SAAAQ,SAAAG,OAAAC,4BAGA3B,EAAAmB,GAAA,aAAA,WACAnB,EAAA4B,YAAA/B,EAAAkB,SAAAQ,SAAAG,OAAAC,4BAIA,QAAAjB,aAAAV,EAAAG,EAAAG,GACAuB,QAAAC,IAAA,WAAAxB,GACAA,KAAA,EACAN,EAAAyB,SAAA,MAAAtB,EAAA,IAAAN,EAAAkB,SAAAQ,SAAAG,OAAAK,2BAEA/B,EAAAyB,SAAA,MAAAtB,GAIA,QAAAkB,YAAAD,EAAAjB,GACA,GAAAH,GAAAH,EAAAuB,EAAAY,cAEAnC,GAAA,QAAAoC,KAAA,kBAAA9B,EAAA,MAAAyB,YAAA/B,EAAAkB,SAAAQ,SAAAG,OAAAK,2BACA/B,EAAAyB,SAAA5B,EAAAkB,SAAAQ,SAAAG,OAAAK,2BACAlC,EAAA,IAAAM,GAAA+B,IAAAlC,EAAAY,KAAA,aACAiB,QAAAC,IAAAjC,EAAA,YAAAqC,OAGA,QAAAZ,eAAAtB,EAAAG,EAAAU,GACA,GAAAsB,GAAAtC,EAAAA,EAAAkB,SAAAC,eAAAb,IAAA+B,MAAAE,MAAA,IACApC,GAAAqC,SAAAxC,EAAAkB,SAAAQ,SAAAG,OAAAK,4BACA/B,EAAA4B,YAAA/B,EAAAkB,SAAAQ,SAAAG,OAAAK,2BACAI,EAAAnC,EAAAsC,KAAA,OAAA,KAEAtC,EAAAyB,SAAA5B,EAAAkB,SAAAQ,SAAAG,OAAAK,2BACAI,EAAAnC,EAAAsC,KAAA,OAAAzB,GAEAhB,EAAAA,EAAAkB,SAAAC,eAAAb,IAAA+B,IAAAC,EAAAI,aAhHA,SAAA1C,GACAA,EAAAkB,SAAA,SAAAyB,GACA3C,EAAA4C,QAAA,EAAA5C,EAAA6C,MAAAnB,SAAAiB,GACA7C,aAAAE,EAAA6C,MAAAnB,YAEAoB,QAGA9C,EAAAkB,SAAAQ,UACAqB,UACAlB,QACAC,yBAAA,iBACAI,0BAAA,oBACAc,WAAA,EACArB,eAAA,eAIA3B,EAAAkB,SAAAC","file":"radiodiv.min.js","sourcesContent":["/**\n * Handcrafted with â™¥ Beebit Solutions\n * Real coffee was used in this project development\n * Licensed under MIT License\n * contacto@beebit.es\n */\n/**\n *\n * Currently only data-based functionality is working\n *\n * USAGE:\n * Fields structure:\n * \"hidden_field_id\":{\n *      selectors:[],\n *      type:\"radio\" // or \"checkbox\",\n *      selected:true,\n *      value:\"string\"\n * }\n *\n * Inline declaration only for radio.\n * You may add \"radiodiv\" class to each div.\n * Data attributes:\n *\n * data-rd-name=\"string\"\n * data-rd-selected=true // optional, default = false\n * data-rd-value=\"string\"\n *\n * @type {{fields: {}, config: {background_color_hovered: string, background_color_selected: string, animation: boolean, click_callback: Function}}}\n */\n(function ($) {\n    $.radiodiv = function (options) {\n        $.extend(true, $(this).defaults, options);\n        initRadiodiv($(this).defaults);\n    }\n}(jQuery));\n\n\n$.radiodiv.defaults = {\n    fields: {},\n    config: {\n        background_color_hovered: \"radiodiv-hover\",\n        background_color_selected: \"radiodiv-selected\",\n        animation: false,\n        click_callback:function(){}\n    }\n}\n\n$.radiodiv.hidden_checked = {};\n\nfunction initRadiodiv(settings) {\n    /**if(settings !== undefined) {\n        $.each(settings.fields, function (k, v) {\n            if (v.type == \"radio\" && typeof v.selected != \"string\") {\n                throw \"Radiodiv: Illogic options. Multiple radio selection on \" + k;\n            } else {\n                radioDiv(k, v.selectors, v.type, v.selected, v.values);\n            }\n        });\n    }*/\n    $.each($(\".radiodiv\"), function (k, field) {\n        radioDivInline($(field));\n    })\n}\n\nfunction radioDiv(name, selectors, type, selected, values) {\n    createHiddenIfNotExist(name);\n    $.each(selectors, function (k, v) {\n        var field = $(\"#\" + v);\n        addSelected(field, selected, values[v])\n        addRadioDivListeners(field, type, name, values[v]);\n    });\n}\n\nfunction radioDivInline(field) {\n    var name = field.data(\"rd-name\"),\n        selected = ((field.data(\"rd-selected\") == true) ? true : false),\n        value = field.data(\"rd-value\");\n\n    addSelected(field, value, selected)\n    addRadioDivListeners(field, \"radio\", name, value);\n}\n\nfunction createHiddenIfNotExist(name) {\n    if ($.radiodiv.hidden_checked[name] === undefined) {\n        if ($(\"#\" + name).length == 0) {\n            if ($(\"form\").length == 0) {\n                $(\"form\").append('<input type=\"hidden\" name=\"' + name + '\" id=\"' + name + '\" value=\"\">');\n            } else {\n                $(\"body\").append('<input type=\"hidden\" name=\"' + name + '\" id=\"' + name + '\" value=\"\">');\n            }\n            $.radiodiv.hidden_checked[name] = $(\"#\" + name);\n        }\n    }\n}\n\nfunction addRadioDivListeners(field, type, name, value) {\n    field.on('click', function (event) {\n        if (type == \"radio\") {\n            radioClick(event, name);\n        } else {\n            checkBoxClick(field, name, value)\n        }\n        (typeof $.radiodiv.defaults.click_callback === \"function\") ? $.radiodiv.defaults.click_callback(field, type, name, value) : null;\n    });\n\n    field.on(\"mouseenter\", function () {\n        field.addClass($.radiodiv.defaults.config.background_color_hovered);\n    });\n\n    field.on(\"mouseleave\", function () {\n        field.removeClass($.radiodiv.defaults.config.background_color_hovered);\n    })\n}\n\nfunction addSelected(field, name, selected) {\n    console.log(\"SELECTED\",selected)\n    if (selected === true) {\n        field.addClass(\"rd-\" + name + \" \" + $.radiodiv.defaults.config.background_color_selected);\n    } else {\n        field.addClass(\"rd-\" + name);\n    }\n}\n\nfunction radioClick(event, name) {\n    var field = $(event.currentTarget);\n\n    $(\"body\").find(\"[data-rd-name='\"+name+\"']\").removeClass($.radiodiv.defaults.config.background_color_selected);\n    field.addClass($.radiodiv.defaults.config.background_color_selected);\n    $(\"#\"+name).val(field.data(\"rd-value\"));\n    console.log($(\"#example\").val());\n}\n\nfunction checkBoxClick(field, name, value) {\n    var current_array = $($.radiodiv.hidden_checked[name]).val().split(\",\");\n    if (field.hasClass($.radiodiv.defaults.config.background_color_selected)) {\n        field.removeClass($.radiodiv.defaults.config.background_color_selected);\n        current_array[field.attr(\"id\")] = \"\";\n    } else {\n        field.addClass($.radiodiv.defaults.config.background_color_selected);\n        current_array[field.attr(\"id\")] = value;\n    }\n    $($.radiodiv.hidden_checked[name]).val(current_array.toString());\n}"],"sourceRoot":"/source/"}
{"version":3,"sources":["core.js"],"names":["initRadiodiv","settings","undefined","$","each","fields","k","v","type","selected","radioDiv","selectors","values","field","radioDivInline","name","createHiddenIfNotExist","addSelected","addListeners","data","value","console","log","radiodiv","hidden_checked","length","append","on","event","radioClick","checkBoxClick","defaults","click_callback","addClass","config","background_color_hovered","removeClass","background_color_selected","currentTarget","find","val","current_array","split","hasClass","attr","toString","options","extend","this","jQuery","animation"],"mappings":"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","file":"radiodiv.min.js","sourcesContent":["/**\n * Handcrafted with â™¥ Beebit Solutions\n * Real coffee was used in this project development\n * Licensed under MIT License\n * contacto@beebit.es\n */\n/**\n *\n * Currently only data-based functionality is working\n *\n * USAGE:\n * Fields structure:\n * \"hidden_field_id\":{\n *      selectors:[],\n *      type:\"radio\" // or \"checkbox\",\n *      selected:true,\n *      value:\"string\"\n * }\n *\n * Inline declaration only for radio.\n * You may add \"radiodiv\" class to each div.\n * Data attributes:\n *\n * data-rd-name=\"string\"\n * data-rd-selected=true // optional, default = false\n * data-rd-value=\"string\"\n *\n * @type {{fields: {}, config: {background_color_hovered: string, background_color_selected: string, animation: boolean, click_callback: Function}}}\n */\n(function ($) {\n    $.radiodiv = function (options) {\n        $.extend(true, $(this).defaults, options);\n        initRadiodiv($(this).defaults);\n    }\n}(jQuery));\n\n\n$.radiodiv.defaults = {\n    fields: {},\n    config: {\n        background_color_hovered: \"radiodiv-hover\",\n        background_color_selected: \"radiodiv-selected\",\n        animation: false,\n        click_callback:function(){}\n    }\n}\n\n$.radiodiv.hidden_checked = {};\n\nfunction initRadiodiv(settings) {\n    if(settings !== undefined) {\n        $.each(settings.fields, function (k, v) {\n            if (v.type == \"radio\" && typeof v.selected != \"string\") {\n                throw \"Radiodiv: Illogic options. Multiple radio selection on \" + k;\n            } else {\n                radioDiv(k, v.selectors, v.type, v.selected, v.values);\n            }\n        });\n    }\n    $.each($(\".radiodiv\"), function (k, field) {\n        radioDivInline($(field));\n    })\n}\n\nfunction radioDiv(name, selectors, type, selected, values) {\n    createHiddenIfNotExist(name);\n    $.each(selectors, function (k, v) {\n        var field = $(\"#\" + v);\n        addSelected(field, selected, values[v])\n        addListeners(field, type, name, values[v]);\n    });\n}\n\nfunction radioDivInline(field) {\n    var name = field.data(\"rd-name\"),\n        selected = ((field.data(\"rd-selected\") == true) ? true : false),\n        value = field.data(\"rd-value\");\n\n    console.log(\"SELECTED\",selected);\n    addSelected(field, value, selected)\n    addListeners(field, \"radio\", name, value);\n}\n\nfunction createHiddenIfNotExist(name) {\n    if ($.radiodiv.hidden_checked[name] === undefined) {\n        if ($(\"#\" + name).length == 0) {\n            if ($(\"form\").length == 0) {\n                $(\"form\").append('<input type=\"hidden\" name=\"' + name + '\" id=\"' + name + '\" value=\"\">');\n            } else {\n                $(\"body\").append('<input type=\"hidden\" name=\"' + name + '\" id=\"' + name + '\" value=\"\">');\n            }\n            $.radiodiv.hidden_checked[name] = $(\"#\" + name);\n        }\n    }\n}\n\nfunction addListeners(field, type, name, value) {\n    field.on('click', function (event) {\n        if (type == \"radio\") {\n            radioClick(event, name);\n        } else {\n            checkBoxClick(field, name, value)\n        }\n        (typeof $.radiodiv.defaults.click_callback === \"function\") ? $.radiodiv.defaults.click_callback(field, type, name, value) : null;\n    });\n\n    field.on(\"mouseenter\", function () {\n        field.addClass($.radiodiv.defaults.config.background_color_hovered);\n    });\n\n    field.on(\"mouseleave\", function () {\n        field.removeClass($.radiodiv.defaults.config.background_color_hovered);\n    })\n}\n\nfunction addSelected(field, name, selected) {\n    console.log(\"SELECTED\",selected)\n    if (selected === true) {\n        field.addClass(\"rd-\" + name + \" \" + $.radiodiv.defaults.config.background_color_selected);\n    } else {\n        field.addClass(\"rd-\" + name);\n    }\n}\n\nfunction radioClick(event, name) {\n    var field = $(event.currentTarget);\n\n    $(\"body\").find(\"[data-rd-name='\"+name+\"']\").removeClass($.radiodiv.defaults.config.background_color_selected);\n    field.addClass($.radiodiv.defaults.config.background_color_selected);\n    $(\"#\"+name).val(field.data(\"rd-value\"));\n    console.log($(\"#example\").val());\n}\n\nfunction checkBoxClick(field, name, value) {\n    var current_array = $($.radiodiv.hidden_checked[name]).val().split(\",\");\n    if (field.hasClass($.radiodiv.defaults.config.background_color_selected)) {\n        field.removeClass($.radiodiv.defaults.config.background_color_selected);\n        current_array[field.attr(\"id\")] = \"\";\n    } else {\n        field.addClass($.radiodiv.defaults.config.background_color_selected);\n        current_array[field.attr(\"id\")] = value;\n    }\n    $($.radiodiv.hidden_checked[name]).val(current_array.toString());\n}"],"sourceRoot":"/source/"}